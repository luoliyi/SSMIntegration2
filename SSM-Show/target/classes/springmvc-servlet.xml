<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringXmlModelInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 自动扫描包(前端处理器)，实现支持注解的IOC -->
    <context:component-scan base-package="show.springmvccontroller,com.nf.dao" />

    <!-- 通知 -->
    <bean id="advices" class="SpringAop.Advices"></bean>
    <!-- AOP配置 -->
    <!-- proxy-target-class属性表示被代理的类是否为一个没有实现接口的类，Spring会依据实现了接口则使用JDK内置的动态代理，如果未实现接口则使用cglib -->
    <aop:config proxy-target-class="true">
        <!-- 切面配置 -->
        <!--ref表示通知对象的引用 -->
        <aop:aspect ref="advices">
            <!-- 配置切入点(横切逻辑将注入的精确位置) -->
            <aop:pointcut expression="execution(public * com.nf.dao..*(..))" id="pointcut1"/>
            <!--指明多个切入点······· -->
            <aop:pointcut id="" expression=""></aop:pointcut>
            <aop:pointcut id="" expression=""></aop:pointcut>
            <aop:pointcut id="" expression=""></aop:pointcut>

            <!--声明通知，method指定通知类型，pointcut指定切点，就是该通知应该注入那些方法中 -->
            <aop:before method="beforeMethod" pointcut-ref="pointcut1"></aop:before>
            <aop:after method="afterMethod" pointcut-ref="pointcut1"></aop:after>
            <!--  <aop:around method="aroundMethod" pointcut="execution(public * Entities..*.sing*(..))" pointcut-ref="pointcut1"/>-->
            <aop:around method="aroundMethod" pointcut-ref="pointcut1"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut1" throwing="ex"/>
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut1" returning="result"/>
        </aop:aspect>
    </aop:config>

    <!-- Spring MVC不处理静态资源 -->
    <mvc:default-servlet-handler />

    <!-- 支持mvc注解驱动 -->
    <!--在spring中一般采用@RequestMapping注解来完成映射关系，
    要想使@RequestMapping注解生效必须向上下文中注册DefaultAnnotationHandlerMapping和一个AnnotationMethodHandlerAdapter
    实例，这两个实例分别在类级别和方法级别处理。而annotation-driven配置帮助我们自动完成上述两个实例的注入。-->
    <mvc:annotation-driven />

    <!-- 配置映射媒体类型的策略 -->
   <!-- <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="removeSemicolonContent" value="false" />
    </bean>

    &lt;!&ndash; 配置映射媒体类型的策略 &ndash;&gt;
    <bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="removeSemicolonContent" value="false" />
    </bean>

    &lt;!&ndash; 内部视图解析器，JSP与JSTL模板 ，InternalResourceViewResolver 继承至基于URL的视图解析器&ndash;&gt;
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            id="internalResourceViewResolver">
        &lt;!&ndash;指定视图渲染类,该类用于渲染视图 &ndash;&gt;
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        &lt;!&ndash;自动添加到路径中的前缀 &ndash;&gt;
        <property name="prefix" value="/WEB-INF/views/" />
        &lt;!&ndash;自动添加到路径中的后缀 &ndash;&gt;
        <property name="suffix" value=".jsp" />
        &lt;!&ndash;设置所有视图的内容类型，如果视图本身设置内容类型视图类可以忽略 &ndash;&gt;
        <property name="contentType" value="text/html;charset=UTF-8" />
        &lt;!&ndash; 优先级，越小越前 &ndash;&gt;
        <property name="order" value="2" />
    </bean>

    &lt;!&ndash; FreeMarker视图解析器与属性配置 &ndash;&gt;
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        &lt;!&ndash;是否启用缓存 &ndash;&gt;
        <property name="cache" value="true" />
        &lt;!&ndash;自动添加到路径中的前缀 &ndash;&gt;
        <property name="prefix" value="" />
        &lt;!&ndash;自动添加到路径中的后缀 &ndash;&gt;
        <property name="suffix" value=".html" />
        &lt;!&ndash;指定视图渲染类 &ndash;&gt;
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        &lt;!&ndash; 设置是否暴露Spring的macro辅助类库，默认为true &ndash;&gt;
        <property name="exposeSpringMacroHelpers" value="true" />
        &lt;!&ndash; 是否应将所有request属性添加到与模板合并之前的模型。默认为false。 &ndash;&gt;
        <property name="exposeRequestAttributes" value="true" />
        &lt;!&ndash; 是否应将所有session属性添加到与模板合并之前的模型。默认为false。 &ndash;&gt;
        <property name="exposeSessionAttributes" value="true" />
        &lt;!&ndash; 在页面中使用${rc.contextPath}就可获得contextPath &ndash;&gt;
        <property name="requestContextAttribute" value="rc" />
        &lt;!&ndash;设置所有视图的内容类型，如果视图本身设置内容类型视图类可以忽略 &ndash;&gt;
        <property name="contentType" value="text/html;charset=UTF-8" />
        &lt;!&ndash; 优先级，越小越前 &ndash;&gt;
        <property name="order" value="1" />
    </bean>

    &lt;!&ndash; 配置FreeMarker细节 &ndash;&gt;
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        &lt;!&ndash; 模板路径 &ndash;&gt;
        <property name="templateLoaderPath" value="/WEB-INF/htmlviews" />
        <property name="freemarkerSettings">
            <props>
                &lt;!&ndash; 刷新模板的周期，单位为秒 &ndash;&gt;
                <prop key="template_update_delay">5</prop>
                &lt;!&ndash;模板的编码格式 &ndash;&gt;
                <prop key="defaultEncoding">UTF-8</prop>
                &lt;!&ndash;url编码格式 &ndash;&gt;
                <prop key="url_escaping_charset">UTF-8</prop>
                &lt;!&ndash;此属性可以防止模板解析空值时的错误 &ndash;&gt;
                <prop key="classic_compatible">true</prop>
                &lt;!&ndash;该模板所使用的国际化语言环境选项&ndash;&gt;
                <prop key="locale">zh_CN</prop>
                &lt;!&ndash;布尔值格式&ndash;&gt;
                <prop key="boolean_format">true,false</prop>
                &lt;!&ndash;日期时间格式&ndash;&gt;
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                &lt;!&ndash;时间格式&ndash;&gt;
                <prop key="time_format">HH:mm:ss</prop>
                &lt;!&ndash;数字格式&ndash;&gt;
                <prop key="number_format">0.######</prop>
                &lt;!&ndash;自动开启/关闭空白移除，默认为true&ndash;&gt;
                <prop key="whitespace_stripping">true</prop>
            </props>
        </property>
    </bean>-->

    <!--文件上传解析器 -->
    <!--<bean id="multipartResolver"-->
          <!--class="org.springframework.web.multipart.support.StandardServletMultipartResolver">-->
    <!--</bean>-->

    <!--文件-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8" />
        <property name="maxUploadSize" value="10485760000" />
        <property name="maxInMemorySize" value="40960" />
    </bean>
</beans>